# -*- coding: utf-8 -*-
"""Quiz Application.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bMi4QNEuPAxTbhHXtWzhZlFeJIWOeP47
"""

import random
import re

class QuizApp:
    def __init__(self):
        self.questions = {
            "Science": [
                {"question": "What is the chemical symbol for water?", "options": ['A) H2O', 'B) O2', 'C) CO2', 'D) H2'], "answer": "A"},
                {"question": "What planet is known as the Red Planet?", "options": ['A) Earth', 'B) Mars', 'C) Venus', 'D) Jupiter'], "answer": "B"},
                {"question": "What is the symbol for Hertz?", "options": ['A) Hz', 'B) Ht', 'C) Hr', 'D) He'], "answer": "A"},
                {"question": "What are the chemicals used to control weeds?", "options": ['A) Pesticides', 'B) Insecticides', 'C) Fertilizers', 'D) Weedicides'], "answer": "D"},
                {"question": "Example of common preservative?", "options": ['A) Sodium Chloride', 'B) Magnesium Permanganate', 'C) Sodium Metabisulphite', 'D) Sodium Metabisulphate'], "answer": "C"},



            ],
            "History": [
                {"question": "Who was the first President of the United States?", "options": ['A) George Washington', 'B) Thomas Jefferson', 'C) Abraham Lincoln', 'D) John Adams'], "answer": "A"},
                {"question": "In what year did the Titanic sink?", "options": ['A) 1905', 'B) 1912', 'C) 1920', 'D) 1930'], "answer": "B"},
                {"question": "who is known as the Father of the nation of India", "options": ['A) Mahatma Gandhi', 'B) Lal Bahadur Sastri', 'C) Subhash Chandra Bose', 'D) Lokamanya Tilak'], "answer": "A"},
                {"question": "Which country gifted the Statue of Liberty to the United States of America?", "options": ['A) Mexico', 'B) Chile', 'C) Uruguay', 'D) France'], "answer": "D"},
                {"question": "What was the supercontinent called, before it broke down into the continents which we know today? ", "options": ['A) Tectonic', 'B) Plateau', 'C) Pangea', 'D) New Guinea'], "answer": "C"},


            ]
        }
        self.scores_file = "scores.txt"
        self.score_data = []

    def validate_input(self, user_input, valid_inputs):
        """Validates the user input using regular expressions."""
        if re.match(f'^[{valid_inputs}]$', user_input.upper()):
            return True
        else:
            print(f"Invalid input. Please enter one of the following: {valid_inputs}")
            return False

    def take_quiz(self, category):
        """Function to run the quiz and calculate the score."""
        questions = self.questions.get(category, [])
        score = 0

        for q in random.sample(questions, len(questions)):  # Shuffle questions
            print("\n" + q['question'])
            for option in q['options']:
                print(option)

            valid_inputs = 'ABCD'
            user_input = input("Your answer (A/B/C/D): ").upper()
            while not self.validate_input(user_input, valid_inputs):
                user_input = input("Your answer (A/B/C/D): ").upper()

            if user_input == q['answer']:
                print("Correct!")
                score += 1
            else:
                print(f"Incorrect! The correct answer is {q['answer']}.")

        self.save_score(score)
        print(f"\nYour score is {score}/{len(questions)}")

    def save_score(self, score):
        """Save the score to a file."""
        with open(self.scores_file, "a") as file:
            file.write(f"Score: {score}\n")
        self.load_scores()

    def load_scores(self):
        """Load and display all scores."""
        self.score_data = []
        try:
            with open(self.scores_file, "r") as file:
                for line in file:
                    score = int(line.strip().split(":")[1])
                    self.score_data.append(score)
        except FileNotFoundError:
            pass

    def display_statistics(self):
        """Display statistical insights."""
        total_candidates = len(self.score_data)
        if total_candidates == 0:
            print("No data available.")
            return

        highest_score = max(self.score_data)
        lowest_score = min(self.score_data)
        average_score = sum(self.score_data) / total_candidates

        print(f"\nTotal candidates appeared: {total_candidates}")
        print(f"Highest score: {highest_score}")
        print(f"Lowest score: {lowest_score}")
        print(f"Average score: {average_score:.2f}")

    def menu(self):
        """Display the menu and handle user choices."""
        while True:
            print("\nQuiz Application")
            print("1. Take Quiz")
            print("2. Display Statistics")
            print("3. Exit")

            choice = input("Enter your choice (1/2/3): ")
            if choice == "1":
                category = input("Enter category (Science/History): ").capitalize()
                if category in self.questions:
                    self.take_quiz(category)
                else:
                    print("Invalid category!")
            elif choice == "2":
                self.display_statistics()
            elif choice == "3":
                print("Exiting the quiz application.")
                break
            else:
                print("Invalid choice! Please enter a valid option.")

if __name__ == "__main__":
    quiz_app = QuizApp()
    quiz_app.menu()